---
/**
 * Market Overview Report
 * 
 * Comprehensive market overview dashboard with key metrics, trends, and insights.
 */
import DashboardLayout from '../../layouts/DashboardLayout.astro';
import Card from '../../components/atoms/Card.astro';
import KeyMetric from '../../components/molecules/KeyMetric.astro';
import FinancialChart from '../../components/molecules/FinancialChart.astro';
import PipelineChart from '../../components/molecules/PipelineChart.astro';
import DataTable from '../../components/molecules/DataTable.astro';

// Mock data (previously imported from dataUtils)
const companies = [
  {
    id: '1',
    name: 'Pfizer',
    slug: 'pfizer',
    description: 'Global pharmaceutical company',
    financials: [
      { year: 2023, revenue: 85.3, rAndDSpending: 12.1, netIncome: 19.5 }
    ]
  },
  {
    id: '2',
    name: 'Johnson & Johnson',
    slug: 'johnson-johnson',
    description: 'American multinational healthcare company',
    financials: [
      { year: 2023, revenue: 79.8, rAndDSpending: 10.8, netIncome: 17.8 }
    ]
  },
  {
    id: '3',
    name: 'Roche',
    slug: 'roche',
    description: 'Swiss healthcare company',
    financials: [
      { year: 2023, revenue: 72.6, rAndDSpending: 11.5, netIncome: 15.2 }
    ]
  },
  {
    id: '4',
    name: 'Novartis',
    slug: 'novartis',
    description: 'Swiss multinational pharmaceutical company',
    financials: [
      { year: 2023, revenue: 68.3, rAndDSpending: 9.4, netIncome: 14.7 }
    ]
  },
  {
    id: '5',
    name: 'Merck',
    slug: 'merck',
    description: 'American pharmaceutical company',
    financials: [
      { year: 2023, revenue: 65.8, rAndDSpending: 8.7, netIncome: 13.6 }
    ]
  }
];

const products = [
  { id: '1', name: 'Lipitor', stage: 'marketed', companyId: '1' },
  { id: '2', name: 'Prevnar', stage: 'marketed', companyId: '1' },
  { id: '3', name: 'Remicade', stage: 'marketed', companyId: '2' },
  { id: '4', name: 'Rituxan', stage: 'marketed', companyId: '3' },
  { id: '5', name: 'Cosentyx', stage: 'marketed', companyId: '4' },
  { id: '6', name: 'Keytruda', stage: 'marketed', companyId: '5' },
  { id: '7', name: 'PF-12345', stage: 'phase3', companyId: '1' },
  { id: '8', name: 'JNJ-5678', stage: 'phase3', companyId: '2' },
  { id: '9', name: 'RG-9012', stage: 'phase2', companyId: '3' },
  { id: '10', name: 'NVS-3456', stage: 'phase2', companyId: '4' },
  { id: '11', name: 'MRK-7890', stage: 'phase1', companyId: '5' },
  { id: '12', name: 'PF-2468', stage: 'phase1', companyId: '1' },
  { id: '13', name: 'JNJ-1357', stage: 'preclinical', companyId: '2' },
  { id: '14', name: 'RG-2468', stage: 'preclinical', companyId: '3' },
  { id: '15', name: 'NVS-9753', stage: 'submitted', companyId: '4' },
  { id: '16', name: 'MRK-3579', stage: 'approved', companyId: '5' }
];

// Prepare financial data for multiple years
const topCompanies = companies.slice(0, 5);
const revenueData = [];
const rAndDData = [];
const netIncomeData = [];

// Create historical financial data for each company
topCompanies.forEach((company, index) => {
  // Get base values from the company's first financial entry
  const baseRevenue = company.financials[0].revenue;
  const baseRAndD = company.financials[0].rAndDSpending;
  const baseNetIncome = company.financials[0].netIncome;

  // Generate data for the last 5 years (2019-2023)
  for (let year = 2019; year <= 2023; year++) {
    // Use actual data if available, or generate realistic values
    // Find the financial data closest to the current year in the loop
    const financialData = company.financials.find(f => f.year === year) || company.financials[0];
    
    // If no data for this year, create values with slight variations based on the trend
    // This creates a realistic 5-year view for demo purposes
    const yearFactor = (year - 2019) / 4; // 0 to 1 scaling factor
    
    revenueData.push({
      company: company.name,
      year: year,
      value: financialData.year === year ? 
        financialData.revenue : 
        baseRevenue * (0.85 + (yearFactor * 0.3)) // Slight growth trend
    });
    
    rAndDData.push({
      company: company.name,
      year: year,
      value: financialData.year === year ? 
        financialData.rAndDSpending : 
        baseRAndD * (0.9 + (yearFactor * 0.2)) // R&D typically grows steadily
    });
    
    netIncomeData.push({
      company: company.name,
      year: year,
      value: financialData.year === year ? 
        financialData.netIncome : 
        baseNetIncome * (0.8 + (yearFactor * 0.4)) // Net income can be more volatile
    });
  }
});

// Prepare pipeline data
const pipelineStages = ['preclinical', 'phase1', 'phase2', 'phase3', 'submitted', 'approved', 'marketed'];
const pipelineData = pipelineStages.map(stage => ({
  stage,
  count: products.filter(p => p.stage === stage).length
}));

// Prepare market share data
const totalRevenue = topCompanies.reduce((sum, company) => sum + company.financials[0].revenue, 0);
const marketShareData = topCompanies.map(company => ({
  company: company.name,
  revenue: company.financials[0].revenue,
  marketShare: (company.financials[0].revenue / totalRevenue * 100).toFixed(1)
}));

// Table columns configuration
const columns = [
  { key: 'company', label: 'Company', sortable: true },
  { key: 'revenue', label: 'Revenue (B)', sortable: true, align: 'right', render: (value) => `$${value.toFixed(1)}` },
  { key: 'marketShare', label: 'Market Share', sortable: true, align: 'right', render: (value) => `${value}%` }
];

// Breadcrumbs for the page
const breadcrumbs = [
  { label: 'Home', href: '/' },
  { label: 'Reports', href: '/reports' },
  { label: 'Market Overview', href: '/reports/market-overview', isActive: true }
];

// M&A activity mock data
const maData = [
  { year: 2019, dealCount: 38, totalValue: 78.5 },
  { year: 2020, dealCount: 42, totalValue: 92.1 },
  { year: 2021, dealCount: 57, totalValue: 124.6 },
  { year: 2022, dealCount: 51, totalValue: 108.2 },
  { year: 2023, dealCount: 65, totalValue: 145.8 },
];

// Recent major deals
const recentDeals = [
  { 
    acquirer: "Pfizer", 
    target: "BioNTech Therapeutics", 
    date: "Feb 2023", 
    value: "$24.5B",
    status: "Completed",
    description: "Acquisition of mRNA therapy platform and oncology pipeline"
  },
  { 
    acquirer: "Novartis", 
    target: "CellGenix Pharmaceuticals", 
    date: "Aug 2022", 
    value: "$8.7B",
    status: "Completed",
    description: "Expansion into gene therapy for rare diseases"
  },
  { 
    acquirer: "Johnson & Johnson", 
    target: "Antiva Biosciences", 
    date: "Nov 2022", 
    value: "$3.2B",
    status: "Completed",
    description: "Bolstering oncology pipeline with HPV therapeutics"
  },
  { 
    acquirer: "AstraZeneca", 
    target: "Fierce Biotech", 
    date: "Mar å¿œ23", 
    value: "$5.8B",
    status: "Pending Approval",
    description: "Strategic acquisition of respiratory disease portfolio"
  },
];

// Regional market share
const regionalData = [
  { region: "North America", percentage: 42.5 },
  { region: "Europe", percentage: 25.8 },
  { region: "Asia-Pacific", percentage: 22.3 },
  { region: "Rest of World", percentage: 9.4 }
];

// Recent regulatory approvals
const recentApprovals = [
  {
    company: "Pfizer",
    product: "Zavicefta",
    approvalDate: "Jan 15, 2023",
    region: "US",
    indication: "Complicated UTI and Intra-abdominal Infections"
  },
  {
    company: "Novartis",
    product: "Pluvicto",
    approvalDate: "Mar 8, 2023",
    region: "EU",
    indication: "Metastatic Prostate Cancer"
  },
  {
    company: "Roche",
    product: "Vabysmo",
    approvalDate: "Feb 22, 2023",
    region: "Japan",
    indication: "Diabetic Macular Edema"
  },
  {
    company: "Merck",
    product: "Keytruda",
    approvalDate: "Apr 5, 2023",
    region: "US",
    indication: "New indication for Endometrial Carcinoma"
  }
];

---

<DashboardLayout
  title="Market Overview | Top Pharma"
  description="Market overview and key metrics for the pharmaceutical industry"
  currentPath="/reports/market-overview"
  breadcrumbs={breadcrumbs}
>
  <div class="space-y-6">
    <!-- Page header -->
    <div>
      <h1 class="text-2xl font-bold text-[color:var(--color-gray-900)]">Market Overview</h1>
      <p class="mt-1 text-sm text-[color:var(--color-gray-500)]">
        Key metrics and trends in the pharmaceutical industry
      </p>
    </div>

    <!-- Financial metrics -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <Card>
        <div class="p-6">
          <h2 class="text-lg font-medium text-[color:var(--color-gray-900)] mb-4">Top 5 Companies by Revenue</h2>
          <div class="mb-4">
            <select id="company-selector" class="block w-full py-2 px-3 border border-[color:var(--color-gray-300)] rounded-md shadow-sm focus:outline-none focus:ring-[color:var(--color-primary-500)] focus:border-[color:var(--color-primary-500)]">
              {topCompanies.map((company, index) => (
                <option value={index} selected={index === 0}>{company.name}</option>
              ))}
              <option value="all">All Companies</option>
            </select>
          </div>
          <FinancialChart
            id="revenue-chart"
            title="Revenue Trends (2019-2023)"
            data={{
              revenue: revenueData.filter(d => d.company === topCompanies[0].name).map(d => ({ year: d.year, value: d.value }))
            }}
          />
        </div>
      </Card>

      <Card>
        <div class="p-6">
          <h2 class="text-lg font-medium text-[color:var(--color-gray-900)] mb-4">Pipeline Overview</h2>
          <PipelineChart
            id="pipeline-chart"
            title="Products by Development Stage"
            data={pipelineData}
          />
        </div>
      </Card>
    </div>

    <!-- M&A Activity -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      <div class="lg:col-span-2">
        <Card>
          <div class="p-6">
            <h2 class="text-lg font-medium text-[color:var(--color-gray-900)] mb-4">Pharmaceutical M&A Activity</h2>
            <div class="h-80 bg-[color:var(--color-gray-50)] rounded-lg border border-[color:var(--color-gray-200)] p-4 relative">
              <!-- Chart visualization placeholder -->
              <div class="absolute bottom-0 left-0 w-full h-48 flex items-end px-6">
                {maData.map((data, index) => (
                  <div class="flex-1 flex flex-col items-center">
                    <div class="relative">
                      <div class="w-10 bg-[color:var(--color-primary-200)] rounded-t-sm" style={`height: ${data.dealCount * 0.8}px`}></div>
                      <div class="w-10 bg-[color:var(--color-blue-500)] absolute bottom-0 left-0 rounded-t-sm" style={`height: ${data.totalValue * 0.3}px`}></div>
                    </div>
                    <div class="mt-2 text-xs text-[color:var(--color-gray-600)]">{data.year}</div>
                  </div>
                ))}
              </div>
              
              <!-- Legend -->
              <div class="absolute top-2 right-4 bg-white rounded-md shadow-sm p-2 border border-[color:var(--color-gray-200)]">
                <div class="flex items-center mb-1">
                  <div class="w-3 h-3 bg-[color:var(--color-primary-200)] mr-2"></div>
                  <span class="text-xs text-[color:var(--color-gray-600)]">Deal Count</span>
                </div>
                <div class="flex items-center">
                  <div class="w-3 h-3 bg-[color:var(--color-blue-500)] mr-2"></div>
                  <span class="text-xs text-[color:var(--color-gray-600)]">Deal Value ($B)</span>
                </div>
              </div>
              
              <!-- Data labels -->
              <div class="absolute top-10 left-0 w-full flex justify-around">
                {maData.map(data => (
                  <div class="text-center">
                    <div class="text-sm font-medium text-[color:var(--color-gray-900)]">{data.dealCount}</div>
                    <div class="text-xs text-[color:var(--color-blue-600)]">${data.totalValue}B</div>
                  </div>
                ))}
              </div>
            </div>
            
            <div class="mt-4">
              <h3 class="text-sm font-medium text-[color:var(--color-gray-900)] mb-2">Key Insights:</h3>
              <ul class="text-sm text-[color:var(--color-gray-600)] list-disc pl-5 space-y-1">
                <li>M&A activity has increased by 71% since 2019, with a record 65 deals in 2023</li>
                <li>Total deal value in 2023 ($145.8B) represents an 86% increase from 2019</li>
                <li>Average deal size has grown from $2.1B in 2019 to $2.2B in 2023</li>
                <li>Oncology and rare diseases remained the most active therapeutic areas for acquisitions</li>
              </ul>
            </div>
          </div>
        </Card>
      </div>
      
      <Card>
        <div class="p-6">
          <h2 class="text-lg font-medium text-[color:var(--color-gray-900)] mb-4">Recent Major Deals</h2>
          <div class="space-y-4">
            {recentDeals.map(deal => (
              <div class="border-b border-[color:var(--color-gray-200)] pb-3 last:border-0 last:pb-0">
                <div class="flex justify-between items-start">
                  <div>
                    <h3 class="text-sm font-medium text-[color:var(--color-gray-900)]">{deal.acquirer} â†’ {deal.target}</h3>
                    <p class="text-xs text-[color:var(--color-gray-500)] mt-0.5">{deal.description}</p>
                  </div>
                  <span class="text-sm font-medium text-[color:var(--color-gray-900)]">{deal.value}</span>
                </div>
                <div class="flex justify-between mt-1">
                  <span class="text-xs text-[color:var(--color-gray-500)]">{deal.date}</span>
                  <span class={`text-xs font-medium ${deal.status === 'Completed' ? 'text-[color:var(--color-green-600)]' : 'text-[color:var(--color-amber-600)]'}`}>
                    {deal.status}
                  </span>
                </div>
              </div>
            ))}
          </div>
        </div>
      </Card>
    </div>

    <!-- Market share and approvals -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <Card>
        <div class="p-6">
          <h2 class="text-lg font-medium text-[color:var(--color-gray-900)] mb-4">Global Market Share by Region</h2>
          <div class="flex">
            <div class="w-1/2">
              <!-- Donut chart visualization placeholder -->
              <div class="relative h-64 flex items-center justify-center">
                <div class="w-40 h-40 rounded-full bg-[color:var(--color-gray-100)] relative overflow-hidden">
                  <div class="absolute inset-0" style="background: conic-gradient(var(--color-blue-500) 0% 42.5%, var(--color-green-500) 42.5% 68.3%, var(--color-amber-500) 68.3% 90.6%, var(--color-red-500) 90.6% 100%)"></div>
                  <div class="absolute inset-0 m-12 bg-white rounded-full"></div>
                </div>
              </div>
            </div>
            <div class="w-1/2 flex flex-col justify-center">
              <div class="space-y-3">
                {regionalData.map((region, index) => (
                  <div>
                    <div class="flex items-center mb-1">
                      <div class="w-3 h-3 rounded-sm mr-2" style={`background-color: var(--color-${['blue', 'green', 'amber', 'red'][index]}-500)`}></div>
                      <span class="text-sm font-medium text-[color:var(--color-gray-700)]">{region.region}</span>
                    </div>
                    <div class="flex items-center">
                      <div class="flex-1 h-2 bg-[color:var(--color-gray-200)] rounded-full overflow-hidden">
                        <div class="h-full" style={`width: ${region.percentage}%; background-color: var(--color-${['blue', 'green', 'amber', 'red'][index]}-500)`}></div>
                      </div>
                      <span class="ml-2 text-xs font-medium text-[color:var(--color-gray-600)]">{region.percentage}%</span>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
          <div class="mt-4 text-sm text-[color:var(--color-gray-600)] border-t border-[color:var(--color-gray-200)] pt-4">
            <p>North America continues to dominate the pharmaceutical market, but Asia-Pacific is showing the fastest growth rate at 8.4% CAGR, compared to the global average of 5.7%.</p>
          </div>
        </div>
      </Card>
      
      <Card>
        <div class="p-6">
          <h2 class="text-lg font-medium text-[color:var(--color-gray-900)] mb-4">Recent Regulatory Approvals</h2>
          <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-[color:var(--color-gray-200)]">
              <thead class="bg-[color:var(--color-gray-50)]">
                <tr>
                  <th scope="col" class="py-3 pl-4 pr-3 text-left text-xs font-medium text-[color:var(--color-gray-500)] uppercase tracking-wider">Date</th>
                  <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-[color:var(--color-gray-500)] uppercase tracking-wider">Product</th>
                  <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-[color:var(--color-gray-500)] uppercase tracking-wider">Company</th>
                  <th scope="col" class="px-3 py-3 text-left text-xs font-medium text-[color:var(--color-gray-500)] uppercase tracking-wider">Region</th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-[color:var(--color-gray-200)]">
                {recentApprovals.map(approval => (
                  <tr>
                    <td class="py-3 pl-4 pr-3 text-sm text-[color:var(--color-gray-500)]">{approval.approvalDate}</td>
                    <td class="px-3 py-3 whitespace-nowrap">
                      <div>
                        <div class="text-sm font-medium text-[color:var(--color-gray-900)]">{approval.product}</div>
                        <div class="text-xs text-[color:var(--color-gray-500)]">{approval.indication}</div>
                      </div>
                    </td>
                    <td class="px-3 py-3 text-sm text-[color:var(--color-gray-500)]">{approval.company}</td>
                    <td class="px-3 py-3 whitespace-nowrap">
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-[color:var(--color-green-100)] text-[color:var(--color-green-800)]">
                        {approval.region}
                      </span>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
          <div class="mt-4 text-right">
            <a href="#" class="text-sm font-medium text-[color:var(--color-primary-600)] hover:text-[color:var(--color-primary-700)]">View all approvals â†’</a>
          </div>
        </div>
      </Card>
    </div>

    <!-- Market share table -->
    <Card>
      <div class="p-6">
        <h2 class="text-lg font-medium text-[color:var(--color-gray-900)] mb-4">Market Share Analysis</h2>
        <DataTable
          id="market-share-table"
          columns={columns}
          data={marketShareData}
          pageSize={10}
          exportable={true}
        />
      </div>
    </Card>
  </div>
</DashboardLayout>

<script define:vars={{ topCompanies, revenueData, rAndDData, netIncomeData }}>
  document.addEventListener('DOMContentLoaded', () => {
    const companySelector = document.getElementById('company-selector');
    if (!companySelector) return;
    
    const updateChart = () => {
      const selectedValue = companySelector.value;
      const chart = Chart.getChart('revenue-chart');
      if (!chart) return;
      
      let filteredData;
      let chartTitle = "Revenue Trends (2019-2023)";
      
      if (selectedValue === 'all') {
        // Group data by year for all companies
        const yearData = {};
        const companies = [...new Set(revenueData.map(d => d.company))];
        
        // Process the filtered data to prepare datasets for each company
        chart.data.datasets = companies.map((company, index) => {
          const companyData = revenueData.filter(d => d.company === company);
          return {
            label: company,
            data: [2019, 2020, 2021, 2022, 2023].map(year => {
              const point = companyData.find(d => d.year === year);
              return point ? point.value : null;
            }),
            borderWidth: 2,
            fill: false
          };
        });
        
        chartTitle = "Revenue Comparison: All Top 5 Companies (2019-2023)";
      } else {
        // Show single company
        const selectedCompany = topCompanies[selectedValue];
        const companyData = revenueData.filter(d => d.company === selectedCompany.name);
        
        chart.data.datasets = [{
          label: 'Revenue',
          data: [2019, 2020, 2021, 2022, 2023].map(year => {
            const point = companyData.find(d => d.year === year);
            return point ? point.value : null;
          }),
          borderColor: 'rgb(255, 99, 132)',
          backgroundColor: 'rgba(255, 99, 132, 0.2)',
          borderWidth: 2,
          fill: true
        }];
        
        chartTitle = `${selectedCompany.name} Revenue Trends (2019-2023)`;
      }
      
      chart.data.labels = [2019, 2020, 2021, 2022, 2023];
      chart.options.plugins.title.text = chartTitle;
      chart.update();
    };
    
    companySelector.addEventListener('change', updateChart);
  });
</script> 