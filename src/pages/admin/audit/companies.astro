---
/**
 * Companies Audit Page
 * 
 * Compare data between the database and UI to validate data quality.
 */
import DashboardLayout from '../../../components/templates/DashboardLayout.astro';
import Card from '../../../components/atoms/Card.astro';
import { supabase } from '../../../lib/supabase';
import { dbCompanyToCompany } from '../../../interfaces/entities/Company';
import type { Company } from '../../../interfaces/entities';
import { formatMarketCap } from '../../../utils/stringUtils';

// Breadcrumbs for navigation
const breadcrumbs = [
  { label: 'Home', href: '/' },
  { label: 'Admin', href: '/admin' },
  { label: 'Audit', href: '/admin/audit' },
  { label: 'Companies', href: '/admin/audit/companies', isActive: true },
];

// Get companies directly from database using Supabase
const { data: dbData = [], error } = await supabase
  .from('companies')
  .select('*')
  .order('name');

if (error) {
  console.error('Error fetching companies:', error);
}

// Convert database records to Company objects
const dbCompanies = (dbData || []).map(dbCompanyToCompany);

// For reporting, we'll use the same data
const companySample = dbCompanies.slice(0, 10);

// Calculate stats
const stats = {
  companyCount: dbCompanies.length,
  dataSource: 'Supabase'
};

// Format a number with commas for display
function formatNumber(num: number): string {
  return num.toLocaleString();
}

// Format large numbers to K, M, B (e.g., market cap)
function formatLargeNumber(value: number | undefined): string {
  if (value === undefined || value === null) return 'N/A';
  
  if (value >= 1e9) return `$${(value / 1e9).toFixed(1)}B`;
  if (value >= 1e6) return `$${(value / 1e6).toFixed(1)}M`;
  if (value >= 1e3) return `$${(value / 1e3).toFixed(1)}K`;
  
  return `$${value.toFixed(2)}`;
}
---

<DashboardLayout title="Companies Audit | Admin | Top Pharma">
  <div class="min-h-screen bg-gray-100">
    <header class="bg-white shadow">
      <div class="mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">
        <div class="flex items-center">
          <a href="/admin" class="mr-2 text-gray-400 hover:text-gray-600">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5">
              <path fill-rule="evenodd" d="M11.03 3.97a.75.75 0 0 1 0 1.06l-6.22 6.22H21a.75.75 0 0 1 0 1.5H4.81l6.22 6.22a.75.75 0 1 1-1.06 1.06l-7.5-7.5a.75.75 0 0 1 0-1.06l7.5-7.5a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd" />
            </svg>
          </a>
          <h1 class="text-2xl font-bold text-gray-900">Companies Data Audit</h1>
        </div>
      </div>
    </header>
    
    <main class="py-6">
      <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        
        <!-- Data Source Info -->
        <div class="mb-6">
          <Card>
            <div class="p-6">
              <h2 class="text-lg font-medium mb-4">Data Source Information</h2>
              
              <div class="flex items-center justify-between">
                <div>
                  <p class="text-sm text-gray-600">
                    Current data source: <span class="font-medium">{stats.dataSource}</span>
                  </p>
                  <p class="mt-1 text-xs text-gray-500">
                    Toggle between local and remote database using environment variables
                  </p>
                </div>
              </div>
            </div>
          </Card>
        </div>
        
        <!-- Data Stats -->
        <div class="mb-6">
          <h2 class="text-lg font-medium mb-4">Data Stats</h2>
          
          <div class="grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4">
            <Card>
              <div class="p-5">
                <dt class="truncate text-sm font-medium text-gray-500">Company Count</dt>
                <dd class="mt-1 text-3xl font-semibold tracking-tight text-gray-900">{formatNumber(stats.companyCount)}</dd>
              </div>
            </Card>
          </div>
        </div>
        
        <!-- Company Data Table -->
        <div class="mb-8">
          <h2 class="text-lg font-medium mb-4">Company Data Sample</h2>
          
          <Card>
            <div class="p-4">
              <h3 class="text-base font-medium mb-4">Database Companies (First 10)</h3>
              
              <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                  <thead class="bg-gray-50">
                    <tr>
                      <th scope="col" class="px-3 py-3.5 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                      <th scope="col" class="px-3 py-3.5 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Symbol</th>
                      <th scope="col" class="px-3 py-3.5 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Market Cap</th>
                    </tr>
                  </thead>
                  <tbody class="bg-white divide-y divide-gray-200">
                    {companySample.map(company => (
                      <tr>
                        <td class="px-3 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{company.name}</td>
                        <td class="px-3 py-4 whitespace-nowrap text-sm text-gray-500">{company.tickerSymbol}</td>
                        <td class="px-3 py-4 whitespace-nowrap text-sm text-gray-500">{formatMarketCap(company.marketCap * 1e9)}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>
          </Card>
        </div>
      </div>
    </main>
  </div>
</DashboardLayout>

<script>
  // Client-side script for page interactivity
  document.addEventListener('DOMContentLoaded', () => {
    console.log('Companies Audit page loaded');
  });
</script> 