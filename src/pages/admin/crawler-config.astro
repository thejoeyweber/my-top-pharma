---
/**
 * Crawler Configuration Page
 * 
 * Configure and manage web crawler settings, schedules, and rules.
 */
import DashboardLayout from '../../components/templates/DashboardLayout.astro';
import Card from '../../components/atoms/Card.astro';
import { crawlerConfig } from '../../utils/dataUtils';

// Breadcrumbs for navigation
const breadcrumbs = [
  { label: 'Home', href: '/' },
  { label: 'Admin', href: '/admin' },
  { label: 'Crawler Configuration', href: '/admin/crawler-config', isActive: true },
];

// Format date
const formatDate = (dateString: string): string => {
  if (!dateString) return '--';
  const date = new Date(dateString);
  return date.toLocaleString('en-US', {
    month: 'short',
    day: 'numeric',
    year: 'numeric',
    hour: 'numeric',
    minute: '2-digit'
  });
};
---

<DashboardLayout title="Crawler Configuration | Admin | Top Pharma">
  <div class="min-h-screen bg-gray-100">
    <header class="bg-white shadow">
      <div class="mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8">
        <div class="flex items-center">
          <a href="/admin" class="mr-2 text-gray-400 hover:text-gray-600">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5">
              <path fill-rule="evenodd" d="M11.03 3.97a.75.75 0 0 1 0 1.06l-6.22 6.22H21a.75.75 0 0 1 0 1.5H4.81l6.22 6.22a.75.75 0 1 1-1.06 1.06l-7.5-7.5a.75.75 0 0 1 0-1.06l7.5-7.5a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd" />
            </svg>
          </a>
          <h1 class="text-3xl font-bold tracking-tight text-gray-900">Crawler Configuration</h1>
        </div>
      </div>
    </header>
    <main class="mx-auto max-w-7xl py-6 px-4 sm:px-6 lg:px-8">
      
      <!-- General Settings -->
      <div class="mb-6">
        <h2 class="text-lg font-semibold text-gray-900 mb-3">General Settings</h2>
        <Card>
          <div class="px-4 py-5 sm:p-6">
            <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
              <div>
                <label for="enable-crawling" class="block text-sm font-medium text-gray-700">Enable Crawling</label>
                <div class="mt-2">
                  <select id="enable-crawling" name="enable-crawling" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm">
                    <option value="true" selected={crawlerConfig.general.enableCrawling}>Enabled</option>
                    <option value="false" selected={!crawlerConfig.general.enableCrawling}>Disabled</option>
                  </select>
                </div>
              </div>
              
              <div>
                <label for="max-concurrent" class="block text-sm font-medium text-gray-700">Max Concurrent Requests</label>
                <div class="mt-2">
                  <input type="number" name="max-concurrent" id="max-concurrent" value={crawlerConfig.general.maxConcurrentRequests} class="block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm">
                </div>
              </div>
              
              <div>
                <label for="request-timeout" class="block text-sm font-medium text-gray-700">Request Timeout (ms)</label>
                <div class="mt-2">
                  <input type="number" name="request-timeout" id="request-timeout" value={crawlerConfig.general.requestTimeout} class="block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm">
                </div>
              </div>
              
              <div>
                <label for="respect-robots" class="block text-sm font-medium text-gray-700">Respect robots.txt</label>
                <div class="mt-2">
                  <select id="respect-robots" name="respect-robots" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm">
                    <option value="true" selected={crawlerConfig.general.respectRobotsTxt}>Yes</option>
                    <option value="false" selected={!crawlerConfig.general.respectRobotsTxt}>No</option>
                  </select>
                </div>
              </div>
              
              <div>
                <label for="user-agent" class="block text-sm font-medium text-gray-700">User Agent</label>
                <div class="mt-2">
                  <input type="text" name="user-agent" id="user-agent" value={crawlerConfig.general.userAgent} class="block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm">
                </div>
              </div>
            </div>
            
            <div class="mt-6 flex justify-end">
              <button type="button" class="inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
                Reset
              </button>
              <button type="button" class="ml-3 inline-flex items-center rounded-md border border-transparent bg-primary-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
                Save Changes
              </button>
            </div>
          </div>
        </Card>
      </div>
      
      <!-- Scheduling Settings -->
      <div class="mb-6">
        <h2 class="text-lg font-semibold text-gray-900 mb-3">Scheduling</h2>
        <Card>
          <div class="px-4 py-5 sm:p-6">
            <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
              <div>
                <label for="frequency" class="block text-sm font-medium text-gray-700">Crawl Frequency</label>
                <div class="mt-2">
                  <select id="frequency" name="frequency" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm">
                    <option value="hourly">Hourly</option>
                    <option value="daily" selected={crawlerConfig.scheduling.frequency === 'daily'}>Daily</option>
                    <option value="weekly" selected={crawlerConfig.scheduling.frequency === 'weekly'}>Weekly</option>
                    <option value="monthly" selected={crawlerConfig.scheduling.frequency === 'monthly'}>Monthly</option>
                  </select>
                </div>
              </div>
              
              <div>
                <label for="start-time" class="block text-sm font-medium text-gray-700">Start Time (UTC)</label>
                <div class="mt-2">
                  <input type="time" name="start-time" id="start-time" value={crawlerConfig.scheduling.startTime} class="block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500 sm:text-sm">
                </div>
              </div>
              
              <div class="sm:col-span-2">
                <label class="block text-sm font-medium text-gray-700">Days to Run</label>
                <div class="mt-2 grid grid-cols-2 gap-2 sm:grid-cols-7">
                  {['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map((day) => (
                    <div class="flex items-center">
                      <input 
                        id={`day-${day.toLowerCase()}`} 
                        name={`day-${day.toLowerCase()}`} 
                        type="checkbox" 
                        checked={crawlerConfig.scheduling.daysToRun.includes(day)} 
                        class="h-4 w-4 rounded border-gray-300 text-primary-600 focus:ring-primary-500"
                      >
                      <label for={`day-${day.toLowerCase()}`} class="ml-2 text-sm text-gray-700">{day}</label>
                    </div>
                  ))}
                </div>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700">Last Run</label>
                <div class="mt-2 text-sm text-gray-900">{formatDate(crawlerConfig.scheduling.lastRun)}</div>
              </div>
              
              <div>
                <label class="block text-sm font-medium text-gray-700">Next Scheduled Run</label>
                <div class="mt-2 text-sm text-gray-900">{formatDate(crawlerConfig.scheduling.nextRun)}</div>
              </div>
            </div>
            
            <div class="mt-6 flex justify-end">
              <button type="button" class="inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
                Reset Schedule
              </button>
              <button type="button" class="ml-3 inline-flex items-center rounded-md border border-transparent bg-primary-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
                Save Schedule
              </button>
              <button type="button" class="ml-3 inline-flex items-center rounded-md border border-transparent bg-amber-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-amber-700 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2">
                Run Crawler Now
              </button>
            </div>
          </div>
        </Card>
      </div>
      
      <!-- Domain Rules -->
      <div class="mb-6">
        <h2 class="text-lg font-semibold text-gray-900 mb-3">Domain Rules</h2>
        <Card>
          <div class="px-4 py-5 sm:p-6">
            <div class="mb-4 flex justify-end">
              <button type="button" class="inline-flex items-center rounded-md border border-transparent bg-primary-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
                Add New Rule
              </button>
            </div>
            
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead>
                  <tr>
                    <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Pattern</th>
                    <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                    <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Max Depth</th>
                    <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                  {crawlerConfig.domainRules.map((rule) => (
                    <tr>
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{rule.pattern}</td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm">
                        <span class={`inline-flex rounded-full px-2 text-xs font-semibold leading-5 ${
                          rule.enabled 
                            ? 'bg-green-100 text-green-800' 
                            : 'bg-red-100 text-red-800'
                        }`}>
                          {rule.enabled ? 'Enabled' : 'Disabled'}
                        </span>
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{rule.maxDepth}</td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        <button type="button" class="text-primary-600 hover:text-primary-900 mr-3">Edit</button>
                        <button type="button" class="text-red-600 hover:text-red-900">Delete</button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </Card>
      </div>
      
      <!-- Data Extraction Rules -->
      <div class="mb-6">
        <h2 class="text-lg font-semibold text-gray-900 mb-3">Data Extraction Rules</h2>
        <Card>
          <div class="px-4 py-5 sm:p-6">
            <div class="mb-4 flex justify-end">
              <button type="button" class="inline-flex items-center rounded-md border border-transparent bg-primary-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2">
                Add New Extraction Rule
              </button>
            </div>
            
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead>
                  <tr>
                    <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rule Name</th>
                    <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">CSS Selector</th>
                    <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                    <th class="px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                  {crawlerConfig.dataExtractionRules.map((rule) => (
                    <tr>
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{rule.name}</td>
                      <td class="px-6 py-4 text-sm text-gray-500">{rule.selector}</td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm">
                        <span class={`inline-flex rounded-full px-2 text-xs font-semibold leading-5 ${
                          rule.enabled 
                            ? 'bg-green-100 text-green-800' 
                            : 'bg-red-100 text-red-800'
                        }`}>
                          {rule.enabled ? 'Enabled' : 'Disabled'}
                        </span>
                      </td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        <button type="button" class="text-primary-600 hover:text-primary-900 mr-3">Edit</button>
                        <button type="button" class="text-red-600 hover:text-red-900">Delete</button>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </div>
        </Card>
      </div>
    </main>
  </div>
</DashboardLayout> 