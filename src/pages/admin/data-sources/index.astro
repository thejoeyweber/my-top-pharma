---
import AdminLayout from '../../../layouts/AdminLayout.astro';
import { getActiveDataSourceType, getDataSource } from '../../../dataSources';

// Get the current data source type and check health
const dataSourceType = getActiveDataSourceType();
const dataSource = getDataSource();
const isHealthy = await dataSource.healthCheck();

// Define the admin pages
const adminPages = [
  {
    title: 'Dashboard',
    description: 'View data source statistics and health information',
    icon: 'chart-bar',
    url: '/admin/data-sources/dashboard',
    color: 'blue'
  },
  {
    title: 'Connection Test',
    description: 'Test the connection to your data source',
    icon: 'lightning-bolt',
    url: '/admin/data-sources/connection-test',
    color: 'yellow'
  },
  {
    title: 'Configuration',
    description: 'Configure and switch between data sources',
    icon: 'cog',
    url: '/admin/data-sources/config',
    color: 'green'
  },
  {
    title: 'Documentation',
    description: 'Learn how to use and extend the data source abstraction layer',
    icon: 'document-text',
    url: '/admin/docs/data-sources',
    color: 'purple'
  }
];

// Helper function to render the appropriate icon
const renderIcon = (iconName: string) => {
  switch (iconName) {
    case 'chart-bar':
      return `<svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
      </svg>`;
    case 'lightning-bolt':
      return `<svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
      </svg>`;
    case 'cog':
      return `<svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
      </svg>`;
    case 'document-text':
      return `<svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
      </svg>`;
    default:
      return `<svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
      </svg>`;
  }
};
---

<AdminLayout title="Data Source Management">
  <div class="max-w-7xl mx-auto py-8 px-4">
    <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-8">
      <div>
        <h1 class="text-3xl font-bold">Data Source Management</h1>
        <p class="text-gray-600 mt-1">Manage and monitor your data sources</p>
      </div>
      
      <div class="mt-4 md:mt-0 flex items-center">
        <span class="mr-2">Current Data Source:</span>
        <span class="px-3 py-1 bg-gray-100 rounded-full text-sm font-medium">{dataSourceType}</span>
        
        <span class="mx-2">•</span>
        
        {isHealthy ? (
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
            <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
            </svg>
            Healthy
          </span>
        ) : (
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-red-100 text-red-800">
            <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
            </svg>
            Unhealthy
          </span>
        )}
      </div>
    </div>
    
    <div class="bg-white shadow rounded-lg p-6 mb-8">
      <h2 class="text-xl font-semibold mb-4">About Data Sources</h2>
      
      <p class="text-gray-600 mb-4">
        The Data Source Abstraction Layer provides a consistent interface for accessing data
        from various sources, making it easy to switch between different data providers
        without changing the application code.
      </p>
      
      <p class="text-gray-600">
        Use the tools below to manage, monitor, and configure your data sources.
      </p>
    </div>
    
    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-4">
      {adminPages.map(page => (
        <a href={page.url} class="block">
          <div class={`bg-white shadow rounded-lg overflow-hidden hover:shadow-md transition-shadow duration-300`}>
            <div class={`p-5 bg-${page.color}-50`}>
              <div class={`inline-flex items-center justify-center w-12 h-12 rounded-md bg-${page.color}-100 text-${page.color}-600`}>
                <span set:html={renderIcon(page.icon)} />
              </div>
            </div>
            <div class="p-5">
              <h3 class="text-lg font-medium text-gray-900">{page.title}</h3>
              <p class="mt-2 text-sm text-gray-500">{page.description}</p>
            </div>
          </div>
        </a>
      ))}
    </div>
    
    <div class="mt-8 bg-white shadow rounded-lg p-6">
      <h2 class="text-xl font-semibold mb-4">Data Source Documentation</h2>
      
      <div class="prose max-w-none">
        <p>
          The Data Source Abstraction Layer is built around the <code>DataSource</code> interface,
          which defines a standard set of methods for retrieving data. This interface is implemented
          by various data source classes, such as <code>MockDataSource</code> and <code>SupabaseDataSource</code>.
        </p>
        
        <p>
          The <code>DataSourceFactory</code> class manages the creation and access to these data sources,
          allowing the application to switch between them as needed.
        </p>
        
        <p>
          <a href="/admin/docs/data-sources" class="text-blue-600 hover:text-blue-800">
            View the full documentation →
          </a>
        </p>
      </div>
    </div>
  </div>
</AdminLayout> 