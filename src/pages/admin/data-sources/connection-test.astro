---
import AdminLayout from '../../../layouts/AdminLayout.astro';
import { getDataSource, getActiveDataSourceType, getAvailableDataSourceTypes, setActiveDataSource } from '../../../dataSources';

// Get the current data source type
const currentDataSourceType = getActiveDataSourceType();
const availableDataSourceTypes = getAvailableDataSourceTypes();

// Check if we need to change the data source
const requestedDataSource = Astro.url.searchParams.get('dataSource');
if (requestedDataSource && availableDataSourceTypes.includes(requestedDataSource as any)) {
  setActiveDataSource(requestedDataSource as any);
}

// Get the data source and run health check
const dataSource = getDataSource();
const isHealthy = await dataSource.healthCheck();

// Fetch some sample data to verify the connection
let companiesResult;
let therapeuticAreasResult;
let error = null;

try {
  // Get a small sample of companies
  companiesResult = await dataSource.getCompanies({
    pagination: { page: 1, limit: 3 }
  });
  
  // Get a small sample of therapeutic areas
  therapeuticAreasResult = await dataSource.getTherapeuticAreas({
    pagination: { page: 1, limit: 3 }
  });
} catch (err) {
  error = err instanceof Error ? err.message : 'Unknown error occurred';
}
---

<AdminLayout title="Data Source Connection Test">
  <div class="max-w-4xl mx-auto py-8 px-4">
    <h1 class="text-3xl font-bold mb-6">Data Source Connection Test</h1>
    
    <div class="bg-white shadow rounded-lg p-6 mb-8">
      <h2 class="text-xl font-semibold mb-4">Connection Status</h2>
      
      <div class="flex items-center mb-4">
        <span class="font-medium mr-2">Current Data Source:</span>
        <span class="px-3 py-1 bg-gray-100 rounded-full text-sm font-medium">{currentDataSourceType}</span>
      </div>
      
      <div class="flex items-center mb-6">
        <span class="font-medium mr-2">Health Check:</span>
        {isHealthy ? (
          <span class="px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium">Healthy</span>
        ) : (
          <span class="px-3 py-1 bg-red-100 text-red-800 rounded-full text-sm font-medium">Unhealthy</span>
        )}
      </div>
      
      <div class="mb-6">
        <h3 class="text-lg font-medium mb-2">Switch Data Source</h3>
        <div class="flex flex-wrap gap-2">
          {availableDataSourceTypes.map(type => (
            <a 
              href={`?dataSource=${type}`}
              class={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${
                type === currentDataSourceType 
                  ? 'bg-blue-600 text-white' 
                  : 'bg-gray-100 hover:bg-gray-200 text-gray-800'
              }`}
            >
              {type}
            </a>
          ))}
        </div>
      </div>
      
      {error && (
        <div class="p-4 mb-6 bg-red-50 border border-red-200 rounded-md">
          <h3 class="text-lg font-medium text-red-800 mb-2">Error</h3>
          <p class="text-red-700">{error}</p>
        </div>
      )}
    </div>
    
    {!error && (
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div class="bg-white shadow rounded-lg p-6">
          <h2 class="text-xl font-semibold mb-4">Companies Sample</h2>
          {companiesResult && companiesResult.data.length > 0 ? (
            <div>
              <p class="text-sm text-gray-500 mb-2">
                Showing {companiesResult.data.length} of {companiesResult.pagination.total} companies
              </p>
              <ul class="divide-y">
                {companiesResult.data.map(company => (
                  <li class="py-3">
                    <div class="flex items-center">
                      {company.logoUrl && (
                        <img 
                          src={company.logoUrl} 
                          alt={`${company.name} logo`} 
                          class="w-10 h-10 object-contain mr-3"
                        />
                      )}
                      <div>
                        <h3 class="font-medium">{company.name}</h3>
                        <p class="text-sm text-gray-500">{company.id}</p>
                      </div>
                    </div>
                  </li>
                ))}
              </ul>
            </div>
          ) : (
            <p class="text-gray-500">No companies found</p>
          )}
        </div>
        
        <div class="bg-white shadow rounded-lg p-6">
          <h2 class="text-xl font-semibold mb-4">Therapeutic Areas Sample</h2>
          {therapeuticAreasResult && therapeuticAreasResult.data.length > 0 ? (
            <div>
              <p class="text-sm text-gray-500 mb-2">
                Showing {therapeuticAreasResult.data.length} of {therapeuticAreasResult.pagination.total} therapeutic areas
              </p>
              <ul class="divide-y">
                {therapeuticAreasResult.data.map(area => (
                  <li class="py-3">
                    <div class="flex items-center">
                      {area.iconUrl && (
                        <img 
                          src={area.iconUrl} 
                          alt={`${area.name} icon`} 
                          class="w-8 h-8 object-contain mr-3"
                        />
                      )}
                      <div>
                        <h3 class="font-medium">{area.name}</h3>
                        <p class="text-sm text-gray-500">{area.id}</p>
                      </div>
                    </div>
                  </li>
                ))}
              </ul>
            </div>
          ) : (
            <p class="text-gray-500">No therapeutic areas found</p>
          )}
        </div>
      </div>
    )}
    
    <div class="mt-8 bg-white shadow rounded-lg p-6">
      <h2 class="text-xl font-semibold mb-4">Connection Details</h2>
      
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead>
            <tr>
              <th class="px-4 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Property</th>
              <th class="px-4 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Value</th>
            </tr>
          </thead>
          <tbody class="divide-y divide-gray-200">
            <tr>
              <td class="px-4 py-3 text-sm font-medium">Data Source Type</td>
              <td class="px-4 py-3 text-sm">{currentDataSourceType}</td>
            </tr>
            <tr>
              <td class="px-4 py-3 text-sm font-medium">Health Status</td>
              <td class="px-4 py-3 text-sm">{isHealthy ? 'Healthy' : 'Unhealthy'}</td>
            </tr>
            <tr>
              <td class="px-4 py-3 text-sm font-medium">Companies Count</td>
              <td class="px-4 py-3 text-sm">{companiesResult?.pagination.total || 'N/A'}</td>
            </tr>
            <tr>
              <td class="px-4 py-3 text-sm font-medium">Therapeutic Areas Count</td>
              <td class="px-4 py-3 text-sm">{therapeuticAreasResult?.pagination.total || 'N/A'}</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</AdminLayout> 