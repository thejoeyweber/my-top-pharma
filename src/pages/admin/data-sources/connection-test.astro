---
/**
 * Supabase Database Connection Test
 * 
 * Tests the connection to the current Supabase database and displays diagnostics.
 */
import DashboardLayout from '../../../layouts/DashboardLayout.astro';
import { supabase } from '../../../lib/supabase';

// Check connection health by testing a simple query
let connectionStatus = 'Testing...';
let errorMessage = '';
let queryPerformance = null;
let databaseInfo = null;

try {
  // Start timing
  const startTime = performance.now();
  
  // Test the connection with a simple query
  const { data, error } = await supabase
    .from('companies')
    .select('id, name')
    .limit(5);
    
  // End timing
  const endTime = performance.now();
  queryPerformance = (endTime - startTime).toFixed(2);
  
  if (error) {
    connectionStatus = 'Failed';
    errorMessage = error.message;
  } else {
    connectionStatus = 'Connected';
    
    // Get database version info if possible
    const { data: versionData } = await supabase.rpc('get_db_version');
    databaseInfo = versionData || { version: 'Unknown' };
  }
} catch (error) {
  connectionStatus = 'Error';
  errorMessage = error instanceof Error ? error.message : String(error);
}

// Breadcrumbs
const breadcrumbs = [
  { label: 'Home', href: '/' },
  { label: 'Admin', href: '/admin' },
  { label: 'Supabase Connection', href: '/admin/data-sources/connection-test', isActive: true },
];
---

<DashboardLayout 
  title="Database Connection Test" 
  description="Test connectivity to database sources"
  isAdmin={true}
  showDataSource={true}
>
  <div class="max-w-4xl mx-auto">
    <div class="mb-8">
      <h1 class="text-2xl font-bold mb-2">Supabase Connection Test</h1>
      <p class="text-gray-600">Test the connection to your Supabase database.</p>
    </div>
    
    <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
      <h2 class="text-lg font-semibold mb-4">Connection Status</h2>
      
      <div class="flex items-center mb-4">
        <div class="mr-3">Status:</div>
        {connectionStatus === 'Connected' && (
          <span class="px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium">
            Connected
          </span>
        )}
        {connectionStatus === 'Failed' && (
          <span class="px-3 py-1 bg-red-100 text-red-800 rounded-full text-sm font-medium">
            Failed
          </span>
        )}
        {connectionStatus === 'Testing...' && (
          <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm font-medium">
            Testing...
          </span>
        )}
        {connectionStatus === 'Error' && (
          <span class="px-3 py-1 bg-red-100 text-red-800 rounded-full text-sm font-medium">
            Error
          </span>
        )}
      </div>
      
      {connectionStatus === 'Connected' && (
        <div>
          <dl class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
            <div>
              <dt class="text-sm font-medium text-gray-500">Connection</dt>
              <dd class="mt-1 text-sm text-gray-900">Supabase</dd>
            </div>
            <div>
              <dt class="text-sm font-medium text-gray-500">Query Performance</dt>
              <dd class="mt-1 text-sm text-gray-900">{queryPerformance} ms</dd>
            </div>
            {databaseInfo && (
              <div>
                <dt class="text-sm font-medium text-gray-500">Database Version</dt>
                <dd class="mt-1 text-sm text-gray-900">{databaseInfo.version}</dd>
              </div>
            )}
          </dl>
        </div>
      )}
      
      {errorMessage && (
        <div class="mt-4 p-3 bg-red-50 border border-red-200 rounded-md">
          <h3 class="text-sm font-medium text-red-800">Error Details</h3>
          <pre class="mt-1 text-xs text-red-700 overflow-x-auto">{errorMessage}</pre>
        </div>
      )}
    </div>
    
    <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
      <h2 class="text-lg font-semibold mb-4">Environment Information</h2>
      <dl class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <dt class="text-sm font-medium text-gray-500">Environment</dt>
          <dd class="mt-1 text-sm text-gray-900">
            {import.meta.env.MODE === 'development' ? 'Development' : 'Production'}
          </dd>
        </div>
        <div>
          <dt class="text-sm font-medium text-gray-500">Using Local Database</dt>
          <dd class="mt-1 text-sm text-gray-900">
            {import.meta.env.PUBLIC_USE_LOCAL_DATABASE === 'true' ? 'Yes' : 'No'}
          </dd>
        </div>
        <div>
          <dt class="text-sm font-medium text-gray-500">Supabase URL</dt>
          <dd class="mt-1 text-xs text-gray-500 truncate">
            {import.meta.env.PUBLIC_USE_LOCAL_DATABASE === 'true' 
              ? import.meta.env.PUBLIC_LOCAL_SUPABASE_URL 
              : import.meta.env.PUBLIC_SUPABASE_URL}
          </dd>
        </div>
      </dl>
    </div>
  </div>
</DashboardLayout> 