---
/**
 * Therapeutic Area Index Page
 * 
 * Displays a filterable grid of therapeutic areas.
 */
import DirectoryIndexLayout from '../../layouts/DirectoryIndexLayout.astro';
import DirectoryFilterPanel from '../../components/organisms/DirectoryFilterPanel.astro';
import TherapeuticAreaCard from '../../components/molecules/TherapeuticAreaCard.astro';
import DataSourceVisualizer from '../../components/DataSourceVisualizer.astro';
import Pagination from '../../components/molecules/Pagination.astro';

// Import therapeutic area utilities
import { getTherapeuticAreas, getTherapeuticAreaFilters } from '../../lib/utils/therapeuticAreaUtils';
import { getPaginationParams } from '../../lib/utils/urlUtils';
import type { TherapeuticArea } from '../../interfaces/entities';

// Set prerender to false for dynamic content
export const prerender = false;

// Get URL query parameters
const url = new URL(Astro.request.url);
const params = url.searchParams;

// Extract filter parameters
const sortParam = params.get('sort') || 'name_asc';
const search = params.get('search') || '';
const minCompanies = params.get('minCompanies') ? parseInt(params.get('minCompanies')) : 0;
const minProducts = params.get('minProducts') ? parseInt(params.get('minProducts')) : 0;
const viewMode = params.get('view') || 'grid';

// Get pagination parameters
const { page, limit, offset } = getPaginationParams(params);

// Parse sort parameter
const [sortField, sortDirection] = sortParam.split('_');

// Fetch therapeutic areas with statistics
const { therapeuticAreas: areaStats, totalCount } = await getTherapeuticAreas({
  search,
  sortBy: sortField,
  sortDirection: sortDirection as 'asc' | 'desc',
  minCompanies,
  minProducts,
  limit,
  offset
});

// Calculate pagination details
const totalPages = Math.ceil(totalCount / limit);

// Get sort options
const { sortOptions } = await getTherapeuticAreaFilters();

// Set up breadcrumbs
const breadcrumbs = [
  { label: 'Home', href: '/' },
  { label: 'Therapeutic Areas', href: '/therapeutic-areas', isActive: true }
];

// Set page metadata
const title = "Therapeutic Areas";
const description = "Find medical and therapeutic domains across the pharmaceutical industry, browse companies, products, and websites by therapeutic area.";

// Therapeutic Area icon SVG
const taIcon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-amber-600" fill="currentColor" viewBox="0 0 612 612">
  <g>
    <path d="M380.406,254.483c-7.043,3.727-14.33,6.947-21.83,9.607c-16.626,5.899-34.283,9.08-52.575,9.08
      c-33.516,0-66.005,7.368-96.563,21.901c-7.149,3.4-14.112,7.16-20.886,11.26c-4.681,2.834-9.263,5.844-13.756,9.005
      c-4.306,3.03-8.526,6.205-12.652,9.531c-10.795,8.703-20.974,18.401-30.467,29.075c-45.35,50.992-70.326,118.535-70.326,190.186
      v47.975c0,10.989,8.908,19.897,19.897,19.897h26.529c10.988,0,19.897-8.908,19.897-19.897v-31.137h14.923h14.923h296.963h14.923
      h14.923v31.137c0,10.989,8.908,19.897,19.897,19.897h26.529c10.988,0,19.897-8.908,19.897-19.897v-47.975
      c0-71.652-24.975-139.194-70.325-190.186c-9.493-10.674-19.672-20.372-30.467-29.075c-11.004,7.412-22.507,13.983-34.475,19.675
      c-11.429,5.436-23.101,9.98-34.975,13.637c23.809,12.596,44.8,31.04,61.573,53.719h-18.929h-20.193H209.144H188.95h-18.929
      c16.774-22.679,37.764-41.123,61.573-53.719c7.044-3.726,14.33-6.947,21.83-9.607c16.626-5.899,34.283-9.08,52.576-9.08
      c33.516,0,66.005-7.368,96.563-21.901c7.149-3.4,14.112-7.16,20.886-11.26c4.681-2.834,9.263-5.844,13.756-9.005
      c4.306-3.03,8.525-6.204,12.652-9.531c10.795-8.703,20.975-18.401,30.467-29.075c45.35-50.992,70.325-118.535,70.325-190.186
      V19.897C550.649,8.908,541.741,0,530.752,0h-26.529c-10.988,0-19.897,8.908-19.897,19.897v31.071h-14.923h-14.923H157.519h-14.923
      h-14.923V19.897C127.674,8.908,118.765,0,107.777,0H81.248C70.259,0,61.351,8.908,61.351,19.897v48.638
      c0,71.652,24.975,139.194,70.325,190.186c9.493,10.674,19.672,20.372,30.467,29.075c11.004-7.412,22.507-13.983,34.475-19.676
      c11.429-5.435,23.101-9.98,34.975-13.637c-24.064-12.731-45.249-31.435-62.111-54.448h18.853h20.09h195.146h20.09h18.854
      C425.655,223.048,404.471,241.752,380.406,254.483z M170.966,471.59h270.069h15.944h15.763c3.174,9.575,5.739,19.49,7.64,29.687
      H465.2h-15.245H162.046h-15.245H131.62c1.901-10.196,4.466-20.111,7.64-29.687h15.763H170.966z M441.312,140.344H170.688h-15.922
      h-15.748c-3.138-9.578-5.671-19.493-7.536-29.687h15.181h15.23h288.216h15.23h15.182c-1.866,10.194-4.399,20.108-7.536,29.687
      h-15.748H441.312z"/>
  </g>
</svg>`;
---

<DirectoryIndexLayout
  title={title}
  description={description}
  currentPath="/therapeutic-areas"
  breadcrumbs={breadcrumbs}
  gradientFrom="amber-500"
  gradientTo="amber-600"
  icon={taIcon}
  totalCount={totalCount}
  showViewToggle={true}
  viewMode={viewMode}
>
  <!-- Filter Bar -->
  <div slot="filters">
    <DirectoryFilterPanel
      search={search}
      sortOptions={sortOptions}
      selectedSort={sortParam}
      showViewToggle={true}
      viewMode={viewMode}
    >
      <div slot="advanced-filters" class="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <!-- Company Count Filter -->
        <div>
          <label for="minCompanies" class="block text-sm font-medium text-gray-700 mb-1">
            Minimum Companies
          </label>
          <input
            type="number"
            name="minCompanies"
            id="minCompanies"
            min="0"
            value={minCompanies > 0 ? minCompanies : ""}
            placeholder="0"
            class="block w-full rounded-md border-gray-300 shadow-sm focus:border-amber-500 focus:ring-amber-500 sm:text-sm"
          />
        </div>
        
        <!-- Product Count Filter -->
        <div>
          <label for="minProducts" class="block text-sm font-medium text-gray-700 mb-1">
            Minimum Products
          </label>
          <input
            type="number"
            name="minProducts"
            id="minProducts"
            min="0"
            value={minProducts > 0 ? minProducts : ""}
            placeholder="0"
            class="block w-full rounded-md border-gray-300 shadow-sm focus:border-amber-500 focus:ring-amber-500 sm:text-sm"
          />
        </div>
      </div>
    </DirectoryFilterPanel>
  </div>

  <!-- Results Count -->
  <div slot="results-count">
    Showing <span class="font-medium">{areaStats.length > 0 ? (page - 1) * limit + 1 : 0} - {Math.min(page * limit, totalCount)}</span> of <span class="font-medium">{totalCount}</span> therapeutic areas
  </div>

  <!-- List View (Table) -->
  <div slot="list-view">
    <table class="min-w-full divide-y divide-gray-200">
      <thead class="bg-gray-50">
        <tr>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Companies</th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Products</th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Websites</th>
          <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
        </tr>
      </thead>
      <tbody class="bg-white divide-y divide-gray-200">
        {areaStats.length === 0 ? (
          <tr>
            <td colspan="5" class="px-6 py-4 text-center text-sm text-gray-500">
              No therapeutic areas found matching your criteria.
            </td>
          </tr>
        ) : (
          areaStats.map(stats => (
            <tr>
              <td class="px-6 py-4">
                <div class="flex items-center">
                  <div class="flex-shrink-0 h-10 w-10 rounded-full bg-amber-100 flex items-center justify-center mr-3">
                    <span class="text-lg font-medium text-amber-600">{stats.area.name.charAt(0)}</span>
                  </div>
                  <div>
                    <div class="text-sm font-medium text-gray-900">{stats.area.name}</div>
                    {stats.area.description && (
                      <div class="text-xs text-gray-500 line-clamp-1 max-w-xs">{stats.area.description}</div>
                    )}
                  </div>
                </div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
                  {stats.companyCount || 0}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                  {stats.productCount || 0}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-purple-100 text-purple-800">
                  {stats.websiteCount || 0}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                <a href={`/therapeutic-areas/${stats.area.slug}`} class="text-amber-600 hover:text-amber-900">View</a>
              </td>
            </tr>
          ))
        )}
      </tbody>
    </table>
  </div>

  <!-- Results Grid -->
  <div slot="results">
    {areaStats.length === 0 ? (
      <div class="p-8 text-center bg-white rounded-lg shadow">
        <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        <h3 class="mt-2 text-lg font-medium text-gray-900">No therapeutic areas found</h3>
        <p class="mt-1 text-sm text-gray-500">Try adjusting your search or filter criteria.</p>
        <div class="mt-6">
          <a href="/therapeutic-areas" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-amber-600 hover:bg-amber-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500">
            Reset Filters
          </a>
        </div>
      </div>
    ) : (
      <div class={`grid gap-4 ${viewMode === 'grid' ? 'grid-cols-1 sm:grid-cols-2 lg:grid-cols-3' : 'grid-cols-1'}`}>
        {areaStats.map(stats => (
          <TherapeuticAreaCard 
            area={stats.area || stats}  
            companyCount={stats.companyCount} 
            productCount={stats.productCount}
            websiteCount={stats.websiteCount}
          />
        ))}
      </div>
    )}
  </div>

  <!-- Pagination -->
  {totalPages > 1 && (
    <div slot="pagination">
      <Pagination
        currentPage={page}
        totalPages={totalPages}
        getPageUrl={(pageNum) => {
          const updatedUrl = new URL(Astro.url);
          updatedUrl.searchParams.set('page', pageNum.toString());
          return updatedUrl.pathname + updatedUrl.search;
        }}
      />
    </div>
  )}

  <!-- Data Source -->
  <div slot="data-source">
    <DataSourceVisualizer />
  </div>
</DirectoryIndexLayout>

<script>
  // All filter functionality handled by form submission
  // No client-side JS needed for basic functionality
</script> 