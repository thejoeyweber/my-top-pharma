---
/**
 * SortSelect Component
 * 
 * A dropdown component for selecting sort options.
 * Includes both the field to sort by and the direction.
 */

interface SortOption {
  value: string;
  label: string;
}

interface Props {
  options: SortOption[];
  label?: string;
  name?: string;
  id?: string;
  selectedValue?: string;
  class?: string;
}

const {
  options,
  label = "Sort by",
  name = "sort",
  id = "sort-select",
  selectedValue = "",
  class: className = "",
} = Astro.props;
---

<div class:list={["sort-select flex flex-col md:flex-row md:items-center gap-2", className]}>
  {label && <label for={id} class="text-sm font-medium text-gray-700 whitespace-nowrap">{label}:</label>}
  
  <div class="relative">
    <select
      id={id}
      name={name}
      class="block w-full rounded-md border border-gray-300 bg-white py-1.5 pl-3 pr-10 text-sm text-gray-900 focus:border-primary-500 focus:outline-none focus:ring-1 focus:ring-primary-500"
      data-sort-select
    >
      {options.map(option => (
        <option value={option.value} selected={option.value === selectedValue}>{option.label}</option>
      ))}
    </select>
    
    <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center pr-3">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
        <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
      </svg>
    </div>
  </div>
</div>

<script>
  // Add sort change event listener
  document.addEventListener('DOMContentLoaded', () => {
    const sortSelects = document.querySelectorAll('[data-sort-select]');
    
    sortSelects.forEach(select => {
      select.addEventListener('change', () => {
        // Dispatch a custom event that can be listened for to update sorting
        const value = (select as HTMLSelectElement).value;
        const event = new CustomEvent('sort:changed', { 
          detail: { value },
          bubbles: true 
        });
        select.dispatchEvent(event);
      });
    });
  });
</script> 