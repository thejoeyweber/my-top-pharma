---
/**
 * Company Card Component
 * 
 * Displays a company's basic information in a card format.
 */
import Button from '../atoms/Button.astro';
import type { Company } from '../../interfaces/entities';
import Card from '../atoms/Card.astro';
import { formatMarketCap } from '../../utils/stringUtils';

interface Props {
  company: Company;
  view?: 'grid' | 'list';
  isCompact?: boolean;
  therapeuticAreaNames?: string[];
}

const { 
  company, 
  view = 'grid', 
  isCompact = false, 
  therapeuticAreaNames = []
} = Astro.props;
---

<Card>
  <div class="p-4">
    <div class="flex flex-col h-full">
      <!-- Company Header -->
      <div class="flex items-center mb-4">
        <div class="w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mr-3 overflow-hidden">
          {company.logoUrl ? (
            <img src={company.logoUrl} alt={`${company.name} logo`} class="w-10 h-10 object-contain" />
          ) : (
            <span class="text-xl font-bold text-primary-600">{company.name.charAt(0)}</span>
          )}
        </div>
        <div>
          <h3 class="text-lg font-medium text-gray-900">{company.name}</h3>
          <p class="text-sm text-gray-500">{company.headquarters || 'Location not available'}</p>
        </div>
      </div>
      
      <!-- Company Description -->
      <p class="text-sm text-gray-600 mb-4 line-clamp-3 flex-grow">{company.description}</p>
      
      <!-- Company Information -->
      <div class="border-t border-gray-200 pt-3 mt-auto">
        <div class="flex justify-between items-end">
          <div>
            <span class="text-xs font-medium text-gray-500">Market Cap</span>
            <p class="text-base font-medium text-gray-900">{formatMarketCap(company.marketCap)}</p>
          </div>
          
          <!-- Therapeutic Areas -->
          <div class="text-right">
            {therapeuticAreaNames.length > 0 && (
              <div class="flex flex-wrap justify-end gap-1 mb-2">
                {therapeuticAreaNames.slice(0, 2).map(area => (
                  <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800">
                    {area}
                  </span>
                ))}
                {therapeuticAreaNames.length > 2 && (
                  <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800">
                    +{therapeuticAreaNames.length - 2}
                  </span>
                )}
              </div>
            )}
            
            <Button href={`/companies/${company.slug}`} variant="primary" size="sm">View Profile</Button>
          </div>
        </div>
      </div>
    </div>
  </div>
</Card> 