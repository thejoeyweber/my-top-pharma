---
/**
 * Data Source Indicator Component
 * 
 * A development-only component that displays the current data source being used
 * (database or static data) for each entity type. This helps with debugging and
 * verification during the migration process.
 */

import { FEATURES, type FeatureFlag, getAllFeatureFlags } from '../utils/featureFlags';

// Only render in development mode
const isProduction = import.meta.env.PROD;

// Get all feature flags that start with USE_DATABASE_
const featureFlags = !isProduction 
  ? Object.keys(getAllFeatureFlags())
      .filter(key => key.startsWith('USE_DATABASE_'))
      .map(key => key as FeatureFlag)
  : [];
---

{!isProduction && (
  <div class="data-source-indicator">
    {featureFlags.map((flag) => (
      <div class="py-1">
        <span class="data-source-icon"></span>
        <strong class="font-semibold">{flag.replace('USE_DATABASE_', '')}: </strong>
        <span class="data-source-value"></span>
      </div>
    ))}
    <div class="text-center text-[10px] mt-1 cursor-pointer hover:text-gray-600">(Click to hide)</div>
  </div>
)}

<script>
  import { getAllFeatureFlags } from '../utils/featureFlags';
  
  // Only execute in development mode
  if (import.meta.env.DEV) {
    const indicator = document.querySelector('.data-source-indicator');
    if (indicator) {
      // Initially populate the values
      updateDataSourceValues();
      
      // Hide when clicked
      indicator.addEventListener('click', () => {
        indicator.style.display = 'none';
      });
      
      // Update when storage changes
      window.addEventListener('storage', updateDataSourceValues);
      
      // Function to update the display values
      function updateDataSourceValues() {
        const flags = getAllFeatureFlags();
        const items = document.querySelectorAll('.data-source-indicator > div');
        
        items.forEach(item => {
          const nameElement = item.querySelector('strong');
          const iconElement = item.querySelector('.data-source-icon');
          const valueElement = item.querySelector('.data-source-value');
          
          if (nameElement && iconElement && valueElement) {
            const flagName = 'USE_DATABASE_' + nameElement.textContent?.split(':')[0].trim();
            const isUsingDatabase = flags[flagName];
            
            // Set icon
            iconElement.textContent = isUsingDatabase ? 'ðŸ’¾ ' : 'ðŸ“„ ';
            
            // Set value text
            valueElement.textContent = isUsingDatabase ? 'Database' : 'Static JSON';
            
            // Set colors
            valueElement.className = isUsingDatabase 
              ? 'data-source-value text-cyan-600 font-semibold'
              : 'data-source-value text-purple-600 font-semibold';
          }
        });
      }
    }
  }
</script> 