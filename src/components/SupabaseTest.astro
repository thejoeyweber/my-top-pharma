---
/**
 * Supabase Connection Test Component
 * 
 * This component tests the connection to Supabase and displays the result.
 * It's intended for development and testing purposes only.
 */

import { supabase, testSupabaseConnection } from '../utils/supabase';

// Test the connection when the component is rendered
let connectionStatus = 'Testing...';
let errorMessage = '';
let usingMock = false;

try {
  const result = await testSupabaseConnection();
  usingMock = result.usingMock || false;
  
  if (result.success) {
    connectionStatus = 'Connected';
  } else {
    connectionStatus = usingMock ? 'Invalid Credentials' : 'Failed';
    errorMessage = result.error || '';
  }
} catch (error) {
  connectionStatus = 'Error';
  errorMessage = error instanceof Error ? error.message : String(error);
}
---

<div class="p-4 border rounded-lg bg-gray-50 dark:bg-gray-800">
  <h2 class="text-lg font-semibold mb-2">Supabase Connection Test</h2>
  
  <div class="flex items-center gap-2 mb-2">
    <span>Status:</span>
    {connectionStatus === 'Connected' && (
      <span class="px-2 py-1 bg-green-100 text-green-800 rounded-full text-xs font-medium">
        Connected
      </span>
    )}
    {connectionStatus === 'Failed' && (
      <span class="px-2 py-1 bg-red-100 text-red-800 rounded-full text-xs font-medium">
        Failed
      </span>
    )}
    {connectionStatus === 'Invalid Credentials' && (
      <span class="px-2 py-1 bg-yellow-100 text-yellow-800 rounded-full text-xs font-medium">
        Invalid Credentials
      </span>
    )}
    {connectionStatus === 'Testing...' && (
      <span class="px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs font-medium">
        Testing...
      </span>
    )}
    {connectionStatus === 'Error' && (
      <span class="px-2 py-1 bg-red-100 text-red-800 rounded-full text-xs font-medium">
        Error
      </span>
    )}
  </div>
  
  {usingMock && (
    <div class="mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded text-sm text-yellow-700">
      <p class="font-medium">Using placeholder credentials</p>
      <p>You need to add real Supabase credentials in your .env file:</p>
      <pre class="mt-1 p-1 bg-yellow-100 rounded text-xs overflow-x-auto">
PUBLIC_SUPABASE_URL=https://your-project-id.supabase.co
PUBLIC_SUPABASE_ANON_KEY=your-anon-key</pre>
    </div>
  )}
  
  {errorMessage && !usingMock && (
    <div class="mt-2 p-2 bg-red-50 border border-red-200 rounded text-sm text-red-700">
      {errorMessage}
    </div>
  )}
  
  <div class="mt-4 text-sm text-gray-600 dark:text-gray-400">
    <p>
      This component tests the connection to your Supabase instance.
      Make sure you have set up your environment variables correctly:
    </p>
    <ul class="list-disc list-inside mt-2 space-y-1">
      <li>PUBLIC_SUPABASE_URL</li>
      <li>PUBLIC_SUPABASE_ANON_KEY</li>
    </ul>
  </div>
</div> 