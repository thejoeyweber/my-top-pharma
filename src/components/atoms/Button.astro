---
/**
 * Button Component
 * 
 * A reusable button component with various styles and sizes.
 * Follows Tailwind v4 design patterns as per the .cursorrules documentation.
 */

interface Props {
  type?: 'button' | 'submit' | 'reset';
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'danger';
  size?: 'xs' | 'sm' | 'md' | 'lg';
  class?: string;
  disabled?: boolean;
  href?: string;
  fullWidth?: boolean;
  icon?: string;
  iconPosition?: 'left' | 'right';
  onClick?: (e: MouseEvent) => void;
}

const {
  type = 'button',
  variant = 'primary',
  size = 'md',
  class: className = '',
  disabled = false,
  href,
  fullWidth = false,
  icon,
  iconPosition = 'left',
} = Astro.props;

// Define base classes
const baseClasses = 'inline-flex items-center justify-center font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none';

// Size classes
const sizeClasses = {
  xs: 'text-xs px-2.5 py-1.5 rounded',
  sm: 'text-sm px-3 py-2 rounded-md',
  md: 'text-sm px-4 py-2 rounded-md',
  lg: 'text-base px-5 py-3 rounded-md',
};

// Variant classes
const variantClasses = {
  primary: 'bg-blue-600 text-white hover:bg-blue-700',
  secondary: 'bg-gray-200 text-gray-900 hover:bg-gray-300',
  outline: 'border border-gray-300 bg-transparent text-gray-700 hover:bg-gray-50',
  ghost: 'bg-transparent text-gray-700 hover:bg-gray-100',
  danger: 'bg-red-600 text-white hover:bg-red-700',
};

// Full width class
const fullWidthClass = fullWidth ? 'w-full' : '';

// Combine all classes
const classes = [
  baseClasses,
  sizeClasses[size],
  variantClasses[variant],
  fullWidthClass,
  className
].join(' ');

// Determine if we should render a button or a link
const isLink = !!href && !disabled;
---

{isLink ? (
  <a href={href} class={classes} role="button">
    {icon && iconPosition === 'left' && <span class="mr-2" set:html={icon} />}
    <slot />
    {icon && iconPosition === 'right' && <span class="ml-2" set:html={icon} />}
  </a>
) : (
  <button type={type} class={classes} disabled={disabled}>
    {icon && iconPosition === 'left' && <span class="mr-2" set:html={icon} />}
    <slot />
    {icon && iconPosition === 'right' && <span class="ml-2" set:html={icon} />}
  </button>
)} 