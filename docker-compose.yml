version: '3'

services:
  # MinIO - S3 compatible object storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client (mc) for bucket creation
  minio-client:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until mc config host add myminio http://minio:9000 ${S3_ACCESS_KEY:-minioadmin} ${S3_SECRET_KEY:-minioadmin}; do
        echo 'Waiting for MinIO to be ready...';
        sleep 1;
      done;
      mc mb --ignore-existing myminio/${S3_BUCKET_NAME:-top-pharma-data-lake};
      exit 0;
      "
    environment:
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-minioadmin}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-minioadmin}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME:-top-pharma-data-lake}

  # PostgreSQL database
  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-toppharma}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prefect Orion server (optional, can be run locally instead)
  prefect:
    image: prefecthq/prefect:2-latest
    ports:
      - "4200:4200"
    command: prefect orion start --host 0.0.0.0
    volumes:
      - prefect_data:/root/.prefect

volumes:
  minio_data:
  postgres_data:
  prefect_data: 